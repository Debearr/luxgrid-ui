apiVersion: v1
kind: Namespace
metadata:
  name: vc-pipeline
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vc-pipeline
  namespace: vc-pipeline
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vc-pipeline
  template:
    metadata:
      labels:
        app: vc-pipeline
    spec:
      containers:
        - name: pipeline
          image: vc-pipeline:latest
          imagePullPolicy: IfNotPresent
          command: ["node", "scripts/enterprise-pipeline.mjs"]
          env:
            - name: REDIS_URL
              value: redis://redis.vc-pipeline.svc.cluster.local:6379
            - name: EVENTS_CHANNEL
              value: vc:events
            - name: JOB_QUEUE_KEY
              value: vc:jobs
            - name: CONCURRENCY
              value: "4"
            - name: HEALTH_PORT
              value: "8081"
          ports:
            - name: health
              containerPort: 8081
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: vc-pipeline
  namespace: vc-pipeline
spec:
  selector:
    app: vc-pipeline
  ports:
    - name: http
      port: 8081
      targetPort: 8081
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vc-pipeline-hpa
  namespace: vc-pipeline
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vc-pipeline
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vc-dashboard
  namespace: vc-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vc-dashboard
  template:
    metadata:
      labels:
        app: vc-dashboard
    spec:
      containers:
        - name: dashboard
          image: vc-pipeline:latest
          imagePullPolicy: IfNotPresent
          command: ["node", "scripts/dashboard-server.mjs"]
          env:
            - name: REDIS_URL
              value: redis://redis.vc-pipeline.svc.cluster.local:6379
            - name: EVENTS_CHANNEL
              value: vc:events
            - name: DASHBOARD_PORT
              value: "3001"
          ports:
            - name: http
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: vc-dashboard
  namespace: vc-pipeline
spec:
  selector:
    app: vc-dashboard
  ports:
    - name: http
      port: 3001
      targetPort: 3001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: vc-pipeline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          args: ["--appendonly", "yes"]
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: vc-pipeline
spec:
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379

