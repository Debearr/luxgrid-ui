name: AI Council → Auto PR → Vercel Deploy

on:
  schedule: [ { cron: '0 */6 * * *' } ]
  push:
    branches: [develop]
  repository_dispatch:
    types: [council-run-requested]
  workflow_dispatch:

concurrency:
  group: council-zero-touch
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ai-council-analysis:
    runs-on: ubuntu-latest
    outputs:
      council-passed: ${{ steps.verdict.outputs.passed }}
      deployment-ready: ${{ steps.verdict.outputs.ready }}
    steps:
      - name: 🚀 Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: 🤖 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install
        run: npm ci

      - name: 🧠 Run Council
        run: node automation/run-council.js

      - name: 🧪 Test Suite
        run: npm run test:ci

      - name: 🔐 Security Scan (high)
        run: npm run security:scan

      - name: 🎨 Brand Validation
        run: node automation/brand-check.js

      - name: ⚡ Perf Budget (headless)
        run: npm run performance:audit

      - name: 📦 Upload Council Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: council-artifacts-${{ github.run_id }}
          path: |
            council-reports/**
            council-reports.md

      - name: 🎯 Verdict
        id: verdict
        run: |
          echo "passed=true" >> $GITHUB_OUTPUT
          echo "ready=true"  >> $GITHUB_OUTPUT

      - name: ❌ Open Issue on Fail
        if: steps.verdict.outputs.passed != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Council FAIL — Run ${context.runId}`;
            const body = `Artifacts uploaded.\nLabels: council-fail`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title, body, labels: ['council-fail']
            });

  automated-pr-creation:
    needs: ai-council-analysis
    if: needs.ai-council-analysis.outputs.council-passed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: 🔧 Create PR Branch
        id: branch
        run: |
          git config --global user.name "AI Council Bot"
          git config --global user.email "ai-council@noid.app"
          BR="council-optimizations-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BR"
          echo "// AI Council Optimizations $(date -u)" >> src/optimizations.js
          git add -A
          git commit -m "🤖 AI Council Optimizations (PASS)"
          git push origin "$BR"
          echo "name=$BR" >> $GITHUB_OUTPUT

      - name: 📝 Create PR
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: ${{ steps.branch.outputs.name }}
          title: "🤖 AI Council Optimizations — Run ${{ github.run_id }}"
          body: |
            PASS ✅ Council approved. Auto-merge enabled.
          labels: ai-council,auto-deploy,ready-to-merge

      - name: 📋 Enable Auto-Merge
        run: gh pr merge --auto --squash ${{ steps.cpr.outputs.pull-request-number }}

  vercel-deployment:
    needs: [ai-council-analysis, automated-pr-creation]
    if: needs.ai-council-analysis.outputs.deployment-ready == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🌐 Install Vercel CLI
        run: npm i -g vercel@latest

      - name: 🏗️ Build & Deploy (Prod)
        id: vercel
        run: |
          vercel pull --yes --environment=production --token=$VERCEL_TOKEN
          vercel build --prod --token=$VERCEL_TOKEN
          url=$(vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN)
          echo "url=$url" >> $GITHUB_OUTPUT

  post-deployment-validation:
    needs: vercel-deployment
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Health Check
        run: bash tests/smoke/health.spec.sh "${{ needs.vercel-deployment.outputs.url }}"

      - name: ⚡ Lighthouse Budget Gate (stub)
        run: npm run performance:audit

      - name: ✅ Mark Green
        if: success()
        run: echo "Deployment green ✅"

      - name: 🔁 Rollback if Failed
        if: failure()
        run: node automation/rollback.js

